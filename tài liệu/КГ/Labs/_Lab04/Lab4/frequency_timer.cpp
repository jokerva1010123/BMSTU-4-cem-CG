// ---------------------------------------------------------------------------

#pragma hdrstop

#include "stdafx.h"

#include <windows.h>

#include "frequency_timer.h"

// ---------------------------------------------------------------------------
#pragma package(smart_init)

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
FrequencyTimer::FrequencyTimer() {
	ElapsedTime = 0;
	MeasurementUnit = 1;
}

// ---------------------------------------------------------------------------
void FrequencyTimer::SetMeasurementUnit(double Unit) {
	MeasurementUnit = Unit;
}

// ---------------------------------------------------------------------------
void FrequencyTimer::Start() {
	QueryPerformanceFrequency((PLARGE_INTEGER) & Frequency);
	QueryPerformanceCounter((PLARGE_INTEGER) & StartingTime);
}

// ---------------------------------------------------------------------------
void FrequencyTimer::Stop() {
	QueryPerformanceCounter((PLARGE_INTEGER) & EndingTime);
	ElapsedTime += (double)(EndingTime - StartingTime)
	* MeasurementUnit / Frequency;
}

// ---------------------------------------------------------------------------
void FrequencyTimer::Reset() {
	ElapsedTime = 0;
}

// ---------------------------------------------------------------------------
double FrequencyTimer::GetTime() {
	return ElapsedTime;
}

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
